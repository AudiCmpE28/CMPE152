/* Project #1: Lexer and Token */

1. Using Command Line enter the src directory:
    cd HW_1/sourceFile 

2. To compile in command line: 
    javac symbols/*.java
    javac lexer/*.java
    javac main/Main.java

3. To run the lexer in command line with file:
    java  main.Main < your_test_file

## Our Test file ##
test_file, test_file2, and test_file3 all have an input
followed by the result of the lexer parsing it.

## Project Details: ##
For this project, we added a function named "getNextToken()" in
the lexer file. If there is a \r carriage, it handles it to move
to the next line. We also created a new HashMap to keep track of 
token labels, which if not found by being matched with token tag
are then stored into the has map.

For example:
&& is in hash map, this when it prints it will use its tag to retrieve
token label and print as "AND &&".
If the token is { or }, then it will be stored it with tag number to 
later print in main such as "{ {".

Finally, in main we found that token is '\uFFFF' when EOF, thus from main
will break and end program since there is nothing else to read.
